image: ruby:2.5

stages:
  - images
  - build
  - test
  - deploy
  - docker-stable

before_script:
  - ruby -v
  - bundle install --jobs 4 --path vendor

variables:
  BRANCH_CE: 'master' #
  BRANCH_EE: 'master'
  BRANCH_OMNIBUS: 'master'
  BRANCH_RUNNER: 'master'

.build_base: &build_base
  stage: build
  script:
    - rake setup_git default
    - nanoc compile -VV
  artifacts:
    paths:
      - public
    expire_in: 1w
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - tmp/
      - vendor/ruby
  tags:
    - docker

# Compile on master branch
compile_master:
  <<: *build_base
  variables:
    NANOC_ENV: 'production'
  only:
    - master

# Compile on all branches except master
compile_branch:
  <<: *build_base
  only:
    - branches
  except:
    - master

# Check for 404s in internal links
internal_links:
  stage: test
  script:
    - nanoc check internal_links
  allow_failure: true
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - vendor/ruby
  tags:
    - docker
  # Skip this job when it's invoked by a cross project pipeline. That will speed
  # up the pipeline when a docs preview is triggered. We already check for
  # internal links in every MR anyway. For more info:
  # https://docs.gitlab.com/ee/development/writing_documentation.html#previewing-the-changes-live
  except:
    - pipelines

# SCSS linting
scss_lint:
  stage: test
  script:
    - bundle exec scss-lint
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - vendor/ruby
  tags:
    - docker
  # Skip this job when it's invoked by a cross project pipeline. That will speed
  # up the pipeline when a docs preview is triggered. The triggered pipeline is
  # always a branch off master which should be green anyway. For more info:
  # https://docs.gitlab.com/ee/development/writing_documentation.html#previewing-the-changes-live
  except:
    - pipelines

# Deploy the Review App
review:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  dependencies:
    - compile_branch
  before_script: []
  cache: {}
  script:
    - rsync -av --delete public /srv/nginx/pages/$CI_COMMIT_REF_SLUG
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: http://$CI_COMMIT_REF_SLUG.$APPS_DOMAIN
    on_stop: review_stop
  only:
    - branches@gitlab-com/gitlab-docs
  except:
    - master
  tags:
    - nginx
    - review-apps

# Stop the Review App
review_stop:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  dependencies: []
  artifacts: {}
  before_script: []
  cache: {}
  script:
    - rm -rf public /srv/nginx/pages/$CI_COMMIT_REF_SLUG
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  only:
    - branches@gitlab-com/gitlab-docs
  except:
    - master
  tags:
    - nginx
    - review-apps

# Deploy to Pages
pages:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  before_script: []
  cache: {}
  environment:
    name: production
    url: https://docs.gitlab.com
  script:
    # Symlink all README.html to index.html
    - for i in `find public -name README.html`; do ln -sf README.html $(dirname $i)/index.html; done
  artifacts:
    paths:
    - public
    expire_in: 1h
  only:
    - master@gitlab-com/gitlab-docs
  tags:
    - docker
  dependencies:
    - compile_master

########################
# Docker images builds #
########################

.docker_build: &docker_build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

.except_stable: &except_stable
  except:
    - /^\d{1,2}\.\d{1,2}$/

image:bootstrap:
  stage: images
  <<: *docker_build
  variables:
    DOCKER_DRIVER: overlay2
    IMAGE_NAME: $CI_REGISTRY_IMAGE:bootstrap
  script:
    - docker build -t $IMAGE_NAME -f dockerfiles/Dockerfile.bootstrap .
    - docker push $IMAGE_NAME
  when: manual
  <<: *except_stable

image:builder-onbuild:
  stage: images
  <<: *docker_build
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE:builder-onbuild
  script:
    - docker build -t $IMAGE_NAME -f dockerfiles/Dockerfile.builder.onbuild .
    - docker push $IMAGE_NAME
  when: manual
  <<: *except_stable

image:nginx-onbuild:
  stage: images
  <<: *docker_build
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE:nginx-onbuild
  script:
    - docker build -t $IMAGE_NAME -f dockerfiles/Dockerfile.nginx.onbuild .
    - docker push $IMAGE_NAME
  when: manual
  <<: *except_stable

# Run only on stable branches
image:docs-stable:
  stage: docker-stable
  <<: *docker_build
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  script:
    - docker build -t $IMAGE_NAME .
    - docker push $IMAGE_NAME
  # Single or double digits, separated with a dot
  only:
    - /^\d{1,2}\.\d{1,2}$/

# Run only on master
image:docs-latest:
  stage: docker-stable
  <<: *docker_build
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE:latest
  script:
    - docker build -t $IMAGE_NAME .
    - docker push $IMAGE_NAME
  only:
    - master
